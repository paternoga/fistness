@inject SignInManager<IdentityUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<link rel="stylesheet" href="/css/style1.css">
<style>
    .nav-pills .nav-item .nav-link.active {
    background-color: #940d0d; / Kolor tła przycisku aktywnego /
    color: white; / Kolor tekstu przycisku aktywnego /
}

/ Styl dla nieaktywnych przycisków nawigacyjnych /
.nav-pills .nav-item .nav-link {
    background-color: red; / Kolor tła przycisków nieaktywnych /
    color: white; / Kolor tekstu przycisków nieaktywnych /
}

/ Styl dla przycisków z linkiem (jeśli są używane) /
.nav-pills .nav-item .nav-link:hover {
    background-color: darkred; / Kolor tła przycisku podczas najechania myszką /
    color: white; / Kolor tekstu przycisku podczas najechania myszką */
}
</style>
<ul class="nav nav-pills flex-column" >
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index" style="color: white;">Profil</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email" style="color: white;">Email</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword" style="color: white;">Hasło</a></li>
    @if (hasExternalLogins)
    {
            <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData" style="color: white;">Personal data</a></li>
</ul>
